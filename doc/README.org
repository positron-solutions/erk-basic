#+title: Elisp repository kit basic
#+export_file_name: ../README.md
#+options: toc:nil broken-links:mark num:nil

#+begin_export html
<!-- !!!THIS FILE HAS BEEN GENERATED!!! Edit README.org -->
#+end_export

#+begin_export html
<!-- a href="https://melpa.org/#/erk"><img src="https://melpa.org/packages/erk-badge.svg" alt="melpa package"></a> <a href="https://stable.melpa.org/#/erk"><img src="https://stable.melpa.org/packages/erk-badge.svg" alt="melpa stable package"></a> -->
<a href="https://github.com/positron-solutions/erk-basic/actions/?workflow=CI"><img src="https://github.com/positron-solutions/erk-basic/actions/workflows/ci.yml/badge.svg" alt="CI workflow status"></a>
<a href="https://github.com/positron-solutions/erk-basic/actions/?workflow=Developer+Certificate+of+Origin"><img src="https://github.com/positron-solutions/erk-basic/actions/workflows/dco.yml/badge.svg" alt="DCO Check"></a>
#+end_export

* Elisp Repository Kit Basic
  :PROPERTIES:
  :UNNUMBERED: notoc
  :END:

#+include: "manual.org::*Use with Elisp Repo Kit" :only-contents t

* Install Elisp repository kit basic
  :PROPERTIES:
  :UNNUMBERED: notoc
  :END:

 #+begin_src elisp

   ;; update this after you publish your new package!
   ;; (use-package erk-basic) ; vanilla, assuming you have MELPA configured

   ;; using elpaca's with explicit recipe
   (use-package erk-basic
     :elpaca (erk-basic :host github :repo "positron-solutions/erk-basic"))

   ;; straight with explicit recipe
   (use-package erk-basic
     :straight (erk-basic :type git :host github :repo "positron-solutions/erk-basic"))

   ;; or use manual load-path & require, you brave yak shaver

 #+end_src

 #+toc: headlines 2

* Contributing

  Because this repository is created from [[https://github.com/positron-solutions/elisp-repo-kit][elisp-repo-kit]], please file any issues
  or make relevant pull requests there unless the changes are specific to this
  repo.

  See the [[../CONTRIBUTING.md][CONTRIBUTING]] guide for help making changes to this project.

  For turn-key contribution to the software ecosystem that keeps you moving, see
  the [[https://github.com/sponsors/positron-solutions][funding links]].

# Local Variables:
# after-save-hook: (lambda () (when (require 'erk nil t) (erk-export-readme)))
# End:
